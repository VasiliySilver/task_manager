version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taskdb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  auth-service:
    build: ./services/auth
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/taskdb
      - SECRET_KEY=your-secret-key
      - LOG_LEVEL=INFO
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    depends_on:
      - postgres

  task-service:
    build: ./services/tasks
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/taskdb
      - NOTIFICATION_SERVICE_URL=http://notification-service:8000
      - LOG_LEVEL=INFO
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - notification-service
      - elasticsearch
      - redis

  project-service:
    build: ./services/projects
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/taskdb
      - NOTIFICATION_SERVICE_URL=http://notification-service:8000
      - LOG_LEVEL=INFO
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    depends_on:
      - postgres
      - notification-service

  notification-service:
    build: ./services/notifications
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/taskdb
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    depends_on:
      - postgres
      - redis

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8000
      - TASK_SERVICE_URL=http://task-service:8000
      - PROJECT_SERVICE_URL=http://project-service:8000
    depends_on:
      - auth-service
      - task-service
      - project-service
      - notification-service

  celery-worker:
    build: ./services/celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@db/taskdb
    depends_on:
      - redis
      - db

  celery-beat:
    build: ./services/celery_worker
    command: celery -A celery_app beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - celery-worker

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - auth-service
      - task-service
      - project-service
      - notification-service

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  esdata:
    driver: local
  redis_data: